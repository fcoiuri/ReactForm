{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iuri.mendes\\\\Documents\\\\Projetos\\\\ReactEstudos\\\\ReactForm\\\\src\\\\components\\\\FormularioCadastro\\\\FormularioCadastro.jsx\";\nimport React, { useState } from 'react';\nimport { Button, TextField, Switch, FormControlLabel, Grid } from '@material-ui/core';\n\nfunction FormularioCadastro(_ref) {\n  let {\n    OnSubmit,\n    validateCPF\n  } = _ref;\n  const [name, setName] = useState(\"Iuri\");\n  const [lastName, setLastName] = useState(\"\");\n  const [cpf, setCpf] = useState(\"\");\n  const [promotions, setPromotions] = useState(true);\n  const [news, setNews] = useState(true);\n  const [errors, setErrors] = useState({\n    cpf: {\n      valid: true,\n      text: \"\"\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      OnSubmit({\n        name,\n        lastName,\n        cpf,\n        promotions,\n        news\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: name,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    id: \"name\",\n    label: \"Nome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: lastName,\n    onChange: event => {\n      setLastName(event.target.value);\n    },\n    id: \"lastname\",\n    label: \"Sobrenome\",\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    value: cpf,\n    onChange: event => {\n      setCpf(event.target.value);\n    },\n    onBlur: event => {\n      const isValid = validateCPF(cpf);\n      setErrors({\n        cpf: isValid\n      });\n    },\n    error: !errors.cpf.valid,\n    helperText: errors.cpf.text,\n    id: \"cpf\",\n    label: \"CPF\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Promo\\xE7\\xF5es\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: promotions,\n      onChange: event => {\n        setPromotions(event.target.checked);\n      },\n      name: \"promotions\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    label: \"Novidades\",\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: news,\n      onChange: event => {\n        setNews(event.target.checked);\n      },\n      name: \"news\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\"));\n}\n\nexport default FormularioCadastro;","map":{"version":3,"sources":["C:/Users/iuri.mendes/Documents/Projetos/ReactEstudos/ReactForm/src/components/FormularioCadastro/FormularioCadastro.jsx"],"names":["React","useState","Button","TextField","Switch","FormControlLabel","Grid","FormularioCadastro","OnSubmit","validateCPF","name","setName","lastName","setLastName","cpf","setCpf","promotions","setPromotions","news","setNews","errors","setErrors","valid","text","event","preventDefault","target","value","isValid","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, TextField, Switch, FormControlLabel, Grid } from '@material-ui/core';\r\n\r\nfunction FormularioCadastro({ OnSubmit, validateCPF }) {\r\n    const [name, setName] = useState(\"Iuri\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [cpf, setCpf] = useState(\"\");\r\n    const [promotions, setPromotions] = useState(true);\r\n    const [news, setNews] = useState(true);\r\n    const [errors, setErrors] = useState({\r\n        cpf: {\r\n            valid: true,\r\n            text: \"\"\r\n        }\r\n    })\r\n\r\n    return (\r\n        <form \r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n                OnSubmit({ name, lastName, cpf, promotions, news });\r\n            }}\r\n        >\r\n            <TextField\r\n                value={name}\r\n                onChange={(event) => {\r\n                    setName(event.target.value);\r\n                }}\r\n                id=\"name\"\r\n                label=\"Nome\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                value={lastName}\r\n                onChange={(event) => {\r\n                    setLastName(event.target.value);\r\n                }}\r\n                id=\"lastname\"\r\n                label=\"Sobrenome\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n            />\r\n            <TextField\r\n                value={cpf}\r\n                onChange={(event) => {\r\n                    setCpf(event.target.value);\r\n                }}\r\n                onBlur={(event) => {\r\n                    const isValid = validateCPF(cpf)\r\n                    setErrors({ cpf: isValid })\r\n                }}\r\n                error={!errors.cpf.valid}\r\n                helperText={errors.cpf.text}\r\n                id=\"cpf\"\r\n                label=\"CPF\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justifyContent=\"flex-end\" >\r\n\r\n                <FormControlLabel\r\n                    label=\"Promoções\"\r\n                    control={\r\n                        <Switch\r\n                            checked={promotions}\r\n                            onChange={(event) => {\r\n                                setPromotions(event.target.checked);\r\n                            }}\r\n                            name=\"promotions\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormControlLabel\r\n\r\n                    label=\"Novidades\"\r\n                    control={\r\n                        <Switch\r\n                            checked={news}\r\n                            onChange={(event) => {\r\n                                setNews(event.target.checked);\r\n                            }}\r\n                            name=\"news\"\r\n                            color=\"primary\"\r\n\r\n                        />}\r\n                />\r\n            </Grid>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth\r\n            >\r\n                Cadastrar\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormularioCadastro;\r\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/FormularioCadastro/DadosEntrega.jsx","contexts/RegisterValidation.js","hooks/useErrors.js","components/FormularioCadastro/DadosPessoais.jsx","components/FormularioCadastro/DadosUsuario.jsx","components/FormularioCadastro/Ending.jsx","components/FormularioCadastro/FormularioCadastro.jsx","components/FormularioCadastro/index.js","models/register.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginRight","spacing","width","flexGrow","paper","padding","textAlign","color","palette","text","secondary","DadosEntrega","submit","useState","CEP","setCEP","address","setAddress","district","setDistrict","number","setNumber","complement","setComplement","city","setCity","state","setState","classes","onSubmit","event","preventDefault","Grid","item","xs","TextField","id","label","fullWidth","type","variant","margin","value","onChange","cep","target","then","street","neighborhood","codeState","nameState","brazilianStates","get","name","container","className","Button","RegisterValidation","React","createContext","useErrors","validations","initalState","valid","createInitialState","errors","setErrors","newState","DadosPessoais","setName","lastName","setLastName","cpf","setCpf","promotions","setPromotions","news","setNews","useContext","validateFields","sending","onBlur","error","helperText","required","justifyContent","FormControlLabel","control","Switch","checked","DadosUsuario","email","setEmail","password","setPassword","backgroundColor","background","size","fontSize","textingTitle","typography","button","texting","Ending","Typography","FormularioCadastro","collectedData","setCollectedData","actualStep","setActualStep","useEffect","forms","length","collectData","data","Stepper","activeStep","Step","StepLabel","validateCPF","num","isValid","validatePassword","App","Container","component","maxWidth","align","Provider","path","element","dados","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a05a2a13.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport cep from \"cep-promise\";\r\nimport brazilianStates from \"brazilian-states\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginRight: theme.spacing(1),\r\n    width: \"95%\",\r\n    flexGrow: 1,\r\n    // width: '25ch',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction DadosEntrega({ submit }) {\r\n  const [CEP, setCEP] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [complement, setComplement] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        submit({ CEP, address, district, number, complement, city, state });\r\n      }}\r\n    >\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          id=\"cep\"\r\n          label=\"CEP\"\r\n          fullWidth\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          value={CEP}\r\n          onChange={(event) => {\r\n            cep(event.target.value).then((value) => {\r\n              setAddress(value.street);\r\n              setDistrict(value.neighborhood);\r\n              setCity(value.city);\r\n              let codeState = value.state;\r\n              let nameState = brazilianStates.get(codeState).name;\r\n              setState(nameState);\r\n            });\r\n            setCEP(event.target.value);\r\n          }}\r\n        />\r\n      </Grid>\r\n      <TextField\r\n        id=\"address\"\r\n        label=\"Endereço\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        value={address}\r\n        onChange={(event) => {\r\n          setAddress(event.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            id=\"district\"\r\n            label=\"Bairro\"\r\n            type=\"district\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            value={district}\r\n            onChange={(event) => {\r\n              setDistrict(event.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            id=\"number\"\r\n            fullWidth\r\n            label=\"Número\"\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={number}\r\n            onChange={(event) => {\r\n              setNumber(event.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <TextField\r\n        id=\"complement\"\r\n        label=\"Complemento\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        margin=\"normal\"\r\n        value={complement}\r\n        onChange={(event) => {\r\n          setComplement(event.target.value);\r\n        }}\r\n      />\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={7}>\r\n      <TextField\r\n        id=\"city\"\r\n        label=\"Cidade\"\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        className={classes.root}\r\n        value={city}\r\n        onChange={(event) => {\r\n          setCity(event.target.value);\r\n        }}\r\n      />\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n      <TextField\r\n        id=\"state\"\r\n        label=\"Estado\"\r\n        value={state}\r\n        onChange={(event) => {\r\n          setState(event.target.value);\r\n        }}\r\n        type=\"text\"\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n      />\r\n      </Grid>\r\n      </Grid>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n        Finalizar Cadastro\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DadosEntrega;\r\n","import React from 'react';\r\n\r\nconst RegisterValidation = React.createContext();\r\n\r\nexport default RegisterValidation;\r\n","import React, { useState } from 'react';\r\n\r\nfunction useErrors(validations){\r\n    const initalState = createInitialState(validations);\r\n    const [errors, setErrors] = useState(initalState)\r\n\r\n    function validateFields(event){\r\n        const {name, value} = event.target;\r\n        const newState = {...errors}\r\n        newState[name] = validations[name](value);\r\n        setErrors(newState);\r\n\r\n    }\r\n\r\n    function sending(){\r\n        for(let item in errors){\r\n            if(!errors[item].valid){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return [errors, validateFields, sending]\r\n\r\n}\r\n\r\nfunction createInitialState(validations){\r\n    const initalState = {};\r\n    for(let item in validations){\r\n        initalState[item] = {\r\n            valid: true,\r\n            text: \"\"\r\n        }\r\n    }\r\n    return initalState;\r\n}\r\n\r\nexport default useErrors;\r\n  ","import React, { useState, useContext } from 'react';\r\nimport { Button, TextField, Switch, FormControlLabel, Grid } from '@material-ui/core';\r\nimport RegisterValidation from '../../contexts/RegisterValidation';\r\nimport useErrors from '../../hooks/useErrors';\r\n\r\nfunction DadosPessoais({ submit }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [cpf, setCpf] = useState(\"\");\r\n    const [promotions, setPromotions] = useState(true);\r\n    const [news, setNews] = useState(true);\r\n    const validations = useContext(RegisterValidation);\r\n    const [errors, validateFields, sending] = useErrors(validations);\r\n\r\n    return (\r\n        <form \r\n            onSubmit={(event) => {\r\n                event.preventDefault();\r\n                if(sending()){\r\n                    submit({ name, lastName, cpf, promotions, news });\r\n                }\r\n            }}\r\n        >\r\n            <TextField\r\n                value={name}\r\n                onChange={(event) => {\r\n                    setName(event.target.value);\r\n                }}\r\n                id=\"name\"\r\n                label=\"Nome\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"name\"\r\n                onBlur={validateFields}\r\n                error={!errors.name.valid}\r\n                helperText={errors.name.text}\r\n                required\r\n            />\r\n            <TextField\r\n                value={lastName}\r\n                onChange={(event) => {\r\n                    setLastName(event.target.value);\r\n                }}\r\n                id=\"lastname\"\r\n                label=\"Sobrenome\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"lastname\"\r\n            />\r\n            <TextField\r\n                value={cpf}\r\n                onChange={(event) => {\r\n                    setCpf(event.target.value);\r\n                }}\r\n                onBlur={validateFields}\r\n                error={!errors.cpf.valid}\r\n                helperText={errors.cpf.text}\r\n                id=\"cpf\"\r\n                name=\"cpf\"\r\n                label=\"CPF\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n            />\r\n            <Grid container justifyContent=\"flex-end\" >\r\n\r\n                <FormControlLabel\r\n                    label=\"Promoções\"\r\n                    control={\r\n                        <Switch\r\n                            checked={promotions}\r\n                            onChange={(event) => {\r\n                                setPromotions(event.target.checked);\r\n                            }}\r\n                            name=\"promotions\"\r\n                            color=\"primary\"\r\n                        />\r\n                    }\r\n                />\r\n\r\n                <FormControlLabel\r\n\r\n                    label=\"Novidades\"\r\n                    control={\r\n                        <Switch\r\n                            checked={news}\r\n                            onChange={(event) => {\r\n                                setNews(event.target.checked);\r\n                            }}\r\n                            name=\"news\"\r\n                            color=\"primary\"\r\n\r\n                        />}\r\n                />\r\n            </Grid>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth\r\n            >\r\n                Próximo\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DadosPessoais;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport RegisterValidation from \"../../contexts/RegisterValidation\";\r\nimport useErrors from '../../hooks/useErrors';\r\n\r\n\r\nfunction DadosUsuario({submit}) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const validations = useContext(RegisterValidation);\r\n    const [errors, validateFields, sending] = useErrors(validations);\r\n\r\n    return (\r\n        <form onSubmit={(event)=>{\r\n            event.preventDefault();\r\n            if(sending()){\r\n                submit({email, password});\r\n            }\r\n        }}\r\n        >\r\n            <TextField\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                type=\"email\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                value={email}\r\n                onChange={(event)=>{\r\n                    setEmail(event.target.value);\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                required\r\n                value={password}\r\n                onChange={(event)=>{\r\n                    setPassword(event.target.value);\r\n                }}\r\n                onBlur={validateFields}\r\n                error={!errors.password.valid}\r\n                helperText={errors.password.text}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                fullWidth\r\n            >Próximo</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DadosUsuario;","import React from 'react';\r\nimport { Typography, makeStyles  } from '@material-ui/core';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(1),\r\n      backgroundColor: \"#DED9D8\"\r\n    },\r\n    size:{\r\n      fontSize: \"2em\",\r\n      textAlign: 'center',\r\n    },\r\n    textingTitle:{\r\n      ...theme.typography.button,\r\n      fontSize: \"1.8em\",\r\n      textAlign: 'center',\r\n\r\n    },\r\n    texting:{\r\n      textAlign: 'center',\r\n\r\n    },\r\n  }));\r\n\r\nfunction Ending(){\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root} \r\n        >\r\n          <Typography className={classes.texting} variant=\"h3\">\r\n\r\n            <CheckCircleIcon\r\n            color=\"action\"\r\n            className={classes.size}\r\n            />\r\n          </Typography>\r\n          <Typography  className={classes.textingTitle} variant=\"h5\">\r\n          Obrigado\r\n          </Typography>\r\n          <Typography className={classes.texting} variant=\"h6\">\r\n          Dados coletados com sucesso\r\n          </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ending;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DadosEntrega from \"./DadosEntrega\";\r\nimport DadosPessoais from \"./DadosPessoais\";\r\nimport DadosUsuario from \"./DadosUsuario\";\r\nimport { Step, StepLabel, Stepper } from \"@material-ui/core\";\r\nimport Ending from \"./Ending\";\r\n\r\nfunction FormularioCadastro({ submit, validations }) {\r\n  const [collectedData, setCollectedData] = useState({});\r\n  const [actualStep, setActualStep] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (actualStep === forms.length - 1) {\r\n      submit(collectedData);\r\n    }\r\n  });\r\n\r\n  const forms = [\r\n    <DadosUsuario submit={collectData} validations={validations} />,\r\n    <DadosPessoais submit={collectData} validations={validations} />,\r\n    <DadosEntrega submit={collectData} validations={validations} />,\r\n    <Ending />,\r\n  ];\r\n\r\n  function collectData(data) {\r\n    setCollectedData({\r\n      ...collectedData,\r\n      ...data,\r\n    });\r\n    next();\r\n  }\r\n\r\n  function next() {\r\n    setActualStep(actualStep + 1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n       <Stepper activeStep={actualStep}>\r\n        <Step>\r\n          <StepLabel>Login</StepLabel>\r\n        </Step>\r\n        <Step>\r\n          <StepLabel>Pessoal</StepLabel>\r\n        </Step>\r\n        <Step>\r\n          <StepLabel>Entrega</StepLabel>\r\n        </Step>\r\n      </Stepper>\r\n      {forms[actualStep]} \r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormularioCadastro;\r\n","import FormularioCadastro from \"./FormularioCadastro\";\r\nexport default FormularioCadastro;\r\n","import { cpf } from 'cpf-cnpj-validator';\r\n\r\n\r\n\r\nfunction validateCPF(num) {\r\n    if (!cpf.isValid(num)) {\r\n        return {\r\n            valid: false,\r\n            text: \"CPF inválido\"\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            valid: true,\r\n            text: \"\"\r\n        }\r\n    }\r\n}\r\n\r\nfunction validatePassword(password) {\r\n    if (password.length <= 3 || password.length > 72) {\r\n        return {\r\n            valid: false,\r\n            text: \"Senha deve ter entre 4 e 72 dígitos\"\r\n        }\r\n    }\r\n    else {\r\n        return {\r\n            valid: true,\r\n            text: \"\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {validateCPF, validatePassword};","import React from \"react\";\r\nimport \"./App.css\";\r\nimport FormularioCadastro from \"./components/FormularioCadastro\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport \"@fontsource/roboto\";\r\nimport { validateCPF, validatePassword } from \"./models/register\";\r\nimport RegisterValidation from \"./contexts/RegisterValidation\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Ending from \"./components/FormularioCadastro/Ending\";\r\n\r\nfunction App() {\r\n  function submit(dados) {\r\n    //Posso tratar os dados da forma que quiser\r\n    console.log(dados);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"article\" maxWidth=\"sm\">\r\n      <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n        Formulário de Cadastro\r\n      </Typography>\r\n      <RegisterValidation.Provider\r\n        value={{\r\n          cpf: validateCPF,\r\n          password: validatePassword,\r\n          name: validatePassword,\r\n        }}\r\n      >\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/ReactForm\" element={<FormularioCadastro submit={submit} />} />\r\n          </Routes>\r\n        </Router>\r\n        {/* <FormularioCadastro submit={submit} /> */}\r\n      </RegisterValidation.Provider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}